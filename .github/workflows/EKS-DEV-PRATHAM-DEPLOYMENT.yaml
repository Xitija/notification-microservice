name: Deploy to EKS-Pratham-ms
on:
  push:
    branches:
      - main
env:
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
  AWS_REGION: ${{ secrets.AWS_REGION_NAME }}
jobs:
  build:
    name: Deployment
    runs-on: ubuntu-latest
    steps:
    - name: Set short git commit SHA
      id: commit
      uses: prompt/actions-commit-hash@v2
    - name: Check out code
      uses: actions/checkout@v2
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Setup Node Env
      uses: actions/setup-node@v3
      with:
        node-version: 21.1.0
    - name: Copy .env file
      env:
        ENV_FILE_CONTENT: ${{ secrets.ENV_FILE_CONTENT_DEV }}
      run: echo "$ENV_FILE_CONTENT" > manifest/configmap.yaml
    - name: Creating Dockerfile
      env:
        DOCKERFILE_FILE_CONTENT: ${{ secrets.DOCKERFILE_FILE_CONTENT }}
      run: echo "$DOCKERFILE_FILE_CONTENT" > Dockerfile
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ secrets.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ secrets.ECR_IMAGE_TAG }}
      run: |
        docker build -t $ECR_REGISTRY:$IMAGE_TAG .
        docker push $ECR_REGISTRY:$IMAGE_TAG
    - name: Update kube config
      run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION_NAME }}
    - name: Print environment variables
      run: |
        echo "ECR_REGISTRY: $ECR_REGISTRY"
        echo "IMAGE_TAG: $IMAGE_TAG"
    - name: Update YAML file
      run: |
        sed -e 's|${ECR_REPOSITORY}|'"$ECR_REGISTRY"'|g' \
            -e 's|${ECR_IMAGE_TAG}|'"$IMAGE_TAG"'|g' \
            manifest/notification-service.yaml > manifest/notification-service-updated.yaml
    - name: Print updated YAML
      run: |
        echo "Contents of notification-service-updated.yaml:"
        cat manifest/notification-service-updated.yaml
    - name: Deploy to EKS
      env:
        ECR_REGISTRY: ${{ secrets.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ secrets.ECR_IMAGE_TAG }}
      run: |
        kubectl apply -f manifest/configmap.yaml
        kubectl apply -f manifest/notification-service-updated.yaml
        sleep 10
        kubectl get pods
        kubectl get services
        kubectl get deployment
